stages:
  - build
  - upload
  - release

variables:
  PACKAGE_REGISTRY_URL: $CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/mcd/$CI_COMMIT_TAG

test:ubuntu:18.04:
  stage: build
  image: ubuntu:18.04
  before_script:
    - apt-get update -y && apt install build-essential git wget p7zip-full curl libssl-dev -y
    - wget https://nim-lang.org/choosenim/init.sh
    - sh init.sh -y
    - rm init.sh
    - export PATH=/root/.nimble/bin:$PATH
  script:
    - nimble build -y
  artifacts:
    paths:
      - bin/mcd

test:windows:
  stage: build
  tags:
    - shared-windows
  before_script:
    - choco install -y choosenim cmake
    - $env:Path += ";C:\Users\gitlab_runner\.nimble\bin"
    - $env:Path += ";C:\Program Files\CMake\bin"
    - choosenim.exe 1.4.2 -y
  script:
    - nimble.exe build -y
    - nimble.exe test
  artifacts:
    paths:
      - bin/mcd.exe

upload:
  rules:
    - if: $CI_COMMIT_TAG
  image: curlimages/curl:latest
  stage: upload
  script:
    - mv bin/mcd.exe bin/mcd-$CI_COMMIT_TAG-windows-amd64.exe
    - |
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file bin/mcd-$CI_COMMIT_TAG-windows-amd64.exe $PACKAGE_REGISTRY_URL/mcd-$CI_COMMIT_TAG-windows-amd64.exe
    - mv bin/mcd bin/mcd-$CI_COMMIT_TAG-linux-amd64
    - |
      curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file bin/mcd-$CI_COMMIT_TAG-linux-amd64 $PACKAGE_REGISTRY_URL/mcd-$CI_COMMIT_TAG-linux-amd64

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"mcd-$CI_COMMIT_TAG-linux-amd64\",\"url\":\"$PACKAGE_REGISTRY_URL/mcd-$CI_COMMIT_TAG-linux-amd64\"}" \
        --assets-link "{\"name\":\"mcd-$CI_COMMIT_TAG-windows-amd64.exe\",\"url\":\"$PACKAGE_REGISTRY_URL/mcd-$CI_COMMIT_TAG-windows-amd64.exe\"}"

